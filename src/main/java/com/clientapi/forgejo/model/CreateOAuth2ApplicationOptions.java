/**
 * Forgejo API.
 * This documentation describes the Forgejo API.
 *
 * OpenAPI spec version: 1.20.5+0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.clientapi.forgejo.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;


/**
 * CreateOAuth2ApplicationOptions holds options to create an oauth2 application
 */
@ApiModel(description = "CreateOAuth2ApplicationOptions holds options to create an oauth2 application")
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2023-10-14T16:18:05.057+02:00")
public class CreateOAuth2ApplicationOptions   {
  @SerializedName("confidential_client")
  private Boolean confidentialClient = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("redirect_uris")
  private List<String> redirectUris = new ArrayList<String>();

  public CreateOAuth2ApplicationOptions confidentialClient(Boolean confidentialClient) {
    this.confidentialClient = confidentialClient;
    return this;
  }

   /**
   * Get confidentialClient
   * @return confidentialClient
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getConfidentialClient() {
    return confidentialClient;
  }

  public void setConfidentialClient(Boolean confidentialClient) {
    this.confidentialClient = confidentialClient;
  }

  public CreateOAuth2ApplicationOptions name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CreateOAuth2ApplicationOptions redirectUris(List<String> redirectUris) {
    this.redirectUris = redirectUris;
    return this;
  }

  public CreateOAuth2ApplicationOptions addRedirectUrisItem(String redirectUrisItem) {
    this.redirectUris.add(redirectUrisItem);
    return this;
  }

   /**
   * Get redirectUris
   * @return redirectUris
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<String> getRedirectUris() {
    return redirectUris;
  }

  public void setRedirectUris(List<String> redirectUris) {
    this.redirectUris = redirectUris;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateOAuth2ApplicationOptions createOAuth2ApplicationOptions = (CreateOAuth2ApplicationOptions) o;
    return Objects.equals(this.confidentialClient, createOAuth2ApplicationOptions.confidentialClient) &&
        Objects.equals(this.name, createOAuth2ApplicationOptions.name) &&
        Objects.equals(this.redirectUris, createOAuth2ApplicationOptions.redirectUris);
  }

  @Override
  public int hashCode() {
    return Objects.hash(confidentialClient, name, redirectUris);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateOAuth2ApplicationOptions {\n");
    
    sb.append("    confidentialClient: ").append(toIndentedString(confidentialClient)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    redirectUris: ").append(toIndentedString(redirectUris)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

