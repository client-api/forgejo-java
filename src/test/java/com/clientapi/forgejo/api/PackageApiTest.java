/**
 * Forgejo API.
 * This documentation describes the Forgejo API.
 *
 * OpenAPI spec version: 1.20.5+0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.clientapi.forgejo.api;

import com.clientapi.forgejo.invoker.ApiException;
import com.clientapi.forgejo.model.ModelPackage;
import com.clientapi.forgejo.model.PackageFile;
import org.junit.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PackageApi
 */
public class PackageApiTest {

    private final PackageApi api = new PackageApi();

    
    /**
     * Delete a package
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deletePackageTest() throws ApiException {
        String owner = null;
        String type = null;
        String name = null;
        String version = null;
        // api.deletePackage(owner, type, name, version);

        // TODO: test validations
    }
    
    /**
     * Gets a package
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPackageTest() throws ApiException {
        String owner = null;
        String type = null;
        String name = null;
        String version = null;
        // ModelPackage response = api.getPackage(owner, type, name, version);

        // TODO: test validations
    }
    
    /**
     * Gets all files of a package
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listPackageFilesTest() throws ApiException {
        String owner = null;
        String type = null;
        String name = null;
        String version = null;
        // List<PackageFile> response = api.listPackageFiles(owner, type, name, version);

        // TODO: test validations
    }
    
    /**
     * Gets all packages of an owner
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listPackagesTest() throws ApiException {
        String owner = null;
        Integer page = null;
        Integer limit = null;
        String type = null;
        String q = null;
        // List<ModelPackage> response = api.listPackages(owner, page, limit, type, q);

        // TODO: test validations
    }
    
}
