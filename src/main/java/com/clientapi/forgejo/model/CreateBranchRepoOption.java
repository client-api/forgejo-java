/**
 * Forgejo API.
 * This documentation describes the Forgejo API.
 *
 * OpenAPI spec version: 1.20.5+0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.clientapi.forgejo.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;


/**
 * CreateBranchRepoOption options when creating a branch in a repository
 */
@ApiModel(description = "CreateBranchRepoOption options when creating a branch in a repository")
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2023-10-14T16:18:05.057+02:00")
public class CreateBranchRepoOption   {
  @SerializedName("new_branch_name")
  private String newBranchName = null;

  @SerializedName("old_branch_name")
  private String oldBranchName = null;

  @SerializedName("old_ref_name")
  private String oldRefName = null;

  public CreateBranchRepoOption newBranchName(String newBranchName) {
    this.newBranchName = newBranchName;
    return this;
  }

   /**
   * Name of the branch to create
   * @return newBranchName
  **/
  @ApiModelProperty(example = "null", required = true, value = "Name of the branch to create")
  public String getNewBranchName() {
    return newBranchName;
  }

  public void setNewBranchName(String newBranchName) {
    this.newBranchName = newBranchName;
  }

  public CreateBranchRepoOption oldBranchName(String oldBranchName) {
    this.oldBranchName = oldBranchName;
    return this;
  }

   /**
   * Deprecated: true Name of the old branch to create from
   * @return oldBranchName
  **/
  @ApiModelProperty(example = "null", value = "Deprecated: true Name of the old branch to create from")
  public String getOldBranchName() {
    return oldBranchName;
  }

  public void setOldBranchName(String oldBranchName) {
    this.oldBranchName = oldBranchName;
  }

  public CreateBranchRepoOption oldRefName(String oldRefName) {
    this.oldRefName = oldRefName;
    return this;
  }

   /**
   * Name of the old branch/tag/commit to create from
   * @return oldRefName
  **/
  @ApiModelProperty(example = "null", value = "Name of the old branch/tag/commit to create from")
  public String getOldRefName() {
    return oldRefName;
  }

  public void setOldRefName(String oldRefName) {
    this.oldRefName = oldRefName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateBranchRepoOption createBranchRepoOption = (CreateBranchRepoOption) o;
    return Objects.equals(this.newBranchName, createBranchRepoOption.newBranchName) &&
        Objects.equals(this.oldBranchName, createBranchRepoOption.oldBranchName) &&
        Objects.equals(this.oldRefName, createBranchRepoOption.oldRefName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(newBranchName, oldBranchName, oldRefName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateBranchRepoOption {\n");
    
    sb.append("    newBranchName: ").append(toIndentedString(newBranchName)).append("\n");
    sb.append("    oldBranchName: ").append(toIndentedString(oldBranchName)).append("\n");
    sb.append("    oldRefName: ").append(toIndentedString(oldRefName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

